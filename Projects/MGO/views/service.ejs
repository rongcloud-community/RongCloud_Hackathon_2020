<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <style type="text/css">
        .talk_con{
            width:600px;
            height:500px;
            border:1px solid #666;
            margin:50px auto 0;
            background:#f9f9f9;
        }
        .talk_show{
            width:580px;
            height:420px;
            border:1px solid #666;
            background:#fff;
            margin:10px auto 0;
            overflow:auto;
        }
        .talk_input{
            width:580px;
            margin:10px auto 0;
        }
        .whotalk{
            width:80px;
            height:30px;
            float:left;
            outline:none;
        }
        .talk_word{
            width:420px;
            height:26px;
            padding:0px;
            float:left;
            margin-left:10px;
            outline:none;
            text-indent:10px;
        }
        .talk_sub{
            width:56px;
            height:30px;
            float:left;
            margin-left:10px;
        }
        .atalk{
            margin:10px;
        }
        .atalk span{
            display:inline-block;
            background:#0181cc;
            border-radius:10px;
            color:#fff;
            padding:5px 10px;
        }
        .btalk{
            margin:10px;
            text-align:right;
        }
        .btalk span{
            display:inline-block;
            background:#ef8201;
            border-radius:10px;
            color:#fff;
            padding:5px 10px;
        }
    </style>
    <script src="http://cdn.ronghub.com/RongIMLib-3.0.0-dev.js"></script>
    <script>
        var im = RongIMLib.init({
            appkey: 'pvxdm17jpej8r'
        });

        var conversationList = []; // 当前已存在的会话列表
        im.watch({
            conversation: function(event){
                var updatedConversationList = event.updatedConversationList; // 更新的会话列表
                console.log('更新会话汇总:', updatedConversationList);
                console.log('最新会话列表:', im.Conversation.merge({
                    conversationList: conversationList,
                    updatedConversationList: updatedConversationList
                }));
            },
            message: function(event){
                var message = event.message;
                var Words = document.getElementById("words");
                str = '<div class="btalk"><span>客户 :' + message.content.content +'</span></div>';
                Words.innerHTML = Words.innerHTML + str;
                console.log('收到新消息', message);
            },
            status: function(event){
                var status = event.status;
                switch (status) {
                    case RongIMLib.CONNECTION_STATUS.CONNECTED:
                        console.log('链接成功');
                        break;
                    case RongIMLib.CONNECTION_STATUS.CONNECTING:
                        console.log('正在连接中');
                        break;
                    case RongIMLib.CONNECTION_STATUS.DISCONNECTED:
                        console.log('已主动断开连接');
                        break;
                    case RongIMLib.CONNECTION_STATUS.NETWORK_UNAVAILABLE:
                        console.log('网络不可用'); // SDK 内部会自动进行重连
                        break;
                    case RongIMLib.CONNECTION_STATUS.SOCKET_ERROR:
                        console.log('Socket 链接错误'); // SDK 内部会自动进行重连
                        break;
                    case RongIMLib.CONNECTION_STATUS.KICKED_OFFLINE_BY_OTHER_CLIENT:
                        console.log('其他设备登录, 本端被踢'); // 己端被踢, 不可进行重连. 否则会造成多端循环互踢
                        break;
                    case RongIMLib.CONNECTION_STATUS.BLOCKED:
                        console.log('链接断开, 用户已被封禁');
                        break;
                    default:
                        console.log('链接状态变化为:', status);
                        break;
                }
            }
        });
        var user = {
            token: '9s4FxMLDHXHUvdoWDH/taOEmA7Oo2RK6tS2+bc2NgMPzvoubwLJ8AGeAwpCLuNj0@4ujh.cn.rongnav.com;4ujh.cn.rongcfg.com'
        };
        var im = RongIMLib.init({ appkey: 'pvxdm17jpej8r' }); // 初始化 IM 实例(单个页面仅需初始化一次)
        im.connect(user).then(function(user) {
            console.log('链接成功, 链接用户 id 为: ', user.id);

        }).catch(function(error) {
            console.log('链接失败: ', error.code, error.msg);
        });

        var conversation = im.Conversation.get({
            targetId: 'zhangzhongbaocli',
            type: RongIMLib.CONVERSATION_TYPE.PRIVATE
        });

        function test(sen){
            conversation.send({
                messageType: RongIMLib.MESSAGE_TYPE.TEXT, // 'RC:TxtMsg'
                content: {
                    content: sen // 文本内容
                }
            }).then(function(message){
                console.log('发送文字消息成功', message);
                // var t=document.getElementById("text");
                // t.value += "luyulei" + ":" + message.content.content + "\n"
            });
        }
    </script>
    <script type="text/javascript">
        //
        window.onload = function(){
            var Words = document.getElementById("words");
            var Who = document.getElementById("who");
            var TalkWords = document.getElementById("talkwords");
            var TalkSub = document.getElementById("talksub");


            TalkSub.onclick = function(){
                //定义空字符串
                var str = "";
                if(TalkWords.value == ""){
                    // 消息为空时弹窗
                    alert("消息不能为空");
                    return;
                }
                if(Who.value == 0){
                    //如果Who.value为0n那么是 A说
                    test(TalkWords.value)
                    str = '<div class="atalk"><span>A说 :' + TalkWords.value +'</span></div>';
                }
                else{
                    test(TalkWords.value)
                    str = '<div class="btalk"><span>B说 :' + TalkWords.value +'</span></div>' ;
                }
                Words.innerHTML = Words.innerHTML + str;
            }

        }


    </script>
</head>
<body>
<div class="talk_con">
    <div class="talk_show" id="words">

    </div>
    <div class="talk_input">
        <select class="whotalk" id="who">
            <option value="0">客服A：</option>
        </select>
        <input type="text" class="talk_word" id="talkwords">
        <input type="button" value="发送" class="talk_sub" id="talksub">
    </div>
</div>
</body>
</html>
